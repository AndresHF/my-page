{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.2a779cf76def9202fa5e.hot-update.js","sources":["webpack:///./node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack:///./node_modules/@babel/runtime/helpers/esm/classCallCheck.js","webpack:///./node_modules/@babel/runtime/helpers/esm/createClass.js","webpack:///./node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","webpack:///./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","webpack:///./src/components/sketchs/background/AnimatedBackground.tsx","webpack:///./src/components/sketchs/background/particle.ts","webpack:///./src/components/sketchs/background/particleSystem.ts"],"sourcesContent":["export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","import loadable from \"@loadable/component\";\r\nimport ParticleSystem from \"./particleSystem\";\r\nimport { useParticles } from \"../../UI/hooks/useParticles\";\r\nimport { useEffect } from \"react\";\r\n\r\ntype AnimatedBackgroundProps = {};\r\n\r\nconst AnimatedBackground: React.FC<AnimatedBackgroundProps> = ({}) => {\r\n  let particleSystem: ParticleSystem | undefined;\r\n  const { particlesAmount } = useParticles();\r\n  console.log(\"THIE AMOUNT\", particlesAmount);\r\n  useEffect(() => {\r\n    console.log(\"THE JANDER KNA\", particleSystem, particlesAmount);\r\n    if (particleSystem) {\r\n      console.log(\"JANDEr\");\r\n      particleSystem.setParticles(particlesAmount);\r\n    }\r\n  }, [particlesAmount]);\r\n\r\n  const setup = (p5, canvasParentRef) => {\r\n    p5.createCanvas(window.innerWidth, window.innerHeight).parent(\r\n      canvasParentRef\r\n    );\r\n    p5.strokeWeight(0.5);\r\n    particleSystem = new ParticleSystem(p5);\r\n    console.log(\"CALLING SETUP\");\r\n  };\r\n\r\n  const draw = (p5) => {\r\n    p5.background(255, 100, 255, 0);\r\n    p5.clear();\r\n    p5.noStroke();\r\n    particleSystem.update();\r\n  };\r\n\r\n  if (typeof window == \"undefined\") return null;\r\n  const Sketch = loadable(() => import(\"react-p5\"));\r\n\r\n  return (\r\n    <div className=\"sketchContainer\">\r\n      <Sketch setup={setup} draw={draw} />;\r\n    </div>\r\n  );\r\n};\r\nexport default AnimatedBackground;\r\n","import p5 from \"p5\";\r\n\r\ntype Dimension = {\r\n  width: number;\r\n  height: number;\r\n};\r\n\r\nconst ACC_RATE = 0.1;\r\n\r\nconst checkPos = (pos: number, mouse: number, acceleration: number): number => {\r\n  if (pos <= mouse) return acceleration + ACC_RATE;\r\n  if (pos >= mouse) return acceleration - ACC_RATE;\r\n  return 0;\r\n};\r\n\r\nexport const getParticles = (\r\n  particlesAmount: number,\r\n  radius: number,\r\n  p5: p5\r\n) => {\r\n  let particles = new Array(particlesAmount);\r\n  for (let i = 0; i < particlesAmount; i++) {\r\n    particles[i] = new Particle({ width: radius, height: radius }, p5);\r\n  }\r\n  return particles;\r\n};\r\n\r\nlet colors = [\"red\", \"green\", \"blue\", \"purple\", \"orange\"];\r\n\r\nclass Particle {\r\n  dimension: Dimension;\r\n  acceleration: p5.Vector;\r\n  velocity: p5.Vector;\r\n  p5: p5;\r\n  position: p5.Vector;\r\n  tail: Array<p5.Vector>;\r\n  color: string;\r\n\r\n  constructor(dimension: Dimension, p5: p5) {\r\n    this.dimension = dimension;\r\n    this.p5 = p5;\r\n    this.acceleration = this.p5.createVector();\r\n\r\n    this.velocity = this.p5.createVector();\r\n    this.position = this.p5.createVector(\r\n      Math.random() * window.innerWidth,\r\n      Math.random() * window.innerHeight\r\n    );\r\n    this.tail = [];\r\n    this.color = colors[Math.floor(Math.random() * colors.length)] || \"black\";\r\n  }\r\n\r\n  update(mouseX: number, mouseY: number) {\r\n    const { x, y } = this.position;\r\n    this.acceleration = this.p5.createVector(\r\n      checkPos(x, mouseX, this.acceleration.x),\r\n      checkPos(y, mouseY, this.acceleration.y)\r\n    );\r\n    this.acceleration.limit(0.09);\r\n    this.velocity.add(this.acceleration);\r\n    this.velocity.limit(3);\r\n    this.position.add(this.velocity);\r\n    if (this.tail.length > 5) this.tail = this.tail.slice(0, -1);\r\n    else this.tail = [this.position.copy(), ...this.tail];\r\n  }\r\n\r\n  draw() {\r\n    const { width, height } = this.dimension;\r\n    this.p5.fill(this.color);\r\n    this.p5.ellipse(this.position.x, this.position.y, width, height);\r\n    for (let i = 0; i < this.tail.length; i++) {\r\n      this.p5.ellipse(this.tail[i].x, this.tail[i].y, width - i, height - i);\r\n    }\r\n  }\r\n}\r\n\r\nexport default Particle;\r\n","import Particle, { getParticles } from \"./particle\";\r\nimport p5 from \"p5\";\r\n\r\nclass ParticleSystem {\r\n  particles: Array<Particle>;\r\n  p5: p5;\r\n  constructor(p5: p5) {\r\n    this.particles = getParticles(6, 7, p5);\r\n    this.p5 = p5;\r\n  }\r\n\r\n  setParticles(amount: number) {\r\n    const diff = this.particles.length - amount;\r\n    console.log(\"DOIIING THIS\");\r\n    if (diff > 0) {\r\n      this.particles = [...this.particles, ...getParticles(diff, 7, this.p5)];\r\n    } else if (diff < 0) {\r\n      console.log(\"DIFFF\", diff);\r\n      this.particles = this.particles.slice(diff);\r\n    }\r\n  }\r\n\r\n  checkColision(particleA: Particle, particleB: Particle) {\r\n    const distance = particleA.position.dist(particleB.position) * 2;\r\n    const collided = distance <= particleA.dimension.width;\r\n\r\n    if (collided) {\r\n      particleA.velocity = this.p5.createVector(\r\n        particleA.velocity.x * -Math.random() * 10 - particleB.velocity.x,\r\n        particleA.velocity.y * -Math.random() * 10 - particleB.velocity.y\r\n      );\r\n    }\r\n  }\r\n\r\n  update() {\r\n    this.particles.map((particle, i) => {\r\n      particle.update(this.p5.mouseX, this.p5.mouseY);\r\n      const otherParticles = [\r\n        ...this.particles.slice(0, i),\r\n        ...this.particles.slice(i + 1, this.particles.length),\r\n      ];\r\n      otherParticles.map((other) => this.checkColision(particle, other));\r\n\r\n      particle.draw();\r\n    });\r\n  }\r\n}\r\n\r\nexport default ParticleSystem;\r\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACRA;AAAA;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACJA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACdA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;ACFA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;ACFA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AAGA;AAAA;AACA;AAAA;AACA;AAFA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;;;;;;;;;;;;;;;;;;;;;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AASA;AAAA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AAAA;AACA;AACA;AAEA;AACA;AAIA;AACA;AACA;AACA;;;AACA;AAAA;AAAA;AAAA;AAEA;AAIA;AACA;AACA;AACA;AACA;AAEA;;;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;;;;;;AAGA;;;;;;;;;;;;;;;;;;;;;;AC5EA;AACA;AAEA;AAGA;AAAA;AACA;AADA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AAIA;AAAA;AAAA;AAEA;AACA;AACA;;;;;;AAGA;;;;A","sourceRoot":""}