{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.ad925fa7f1fe5abf4a94.hot-update.js","sources":["webpack:///./src/components/sketchs/background/particleSystem.ts"],"sourcesContent":["import Particle, { getParticles } from \"./particle\";\r\nimport p5 from \"p5\";\r\n\r\nclass ParticleSystem {\r\n  particles: Array<Particle>;\r\n  p5: p5;\r\n  constructor(p5: p5) {\r\n    this.particles = getParticles(6, 7, p5);\r\n    this.p5 = p5;\r\n  }\r\n\r\n  checkColision(particleA: Particle, particleB: Particle) {\r\n    const distance = particleA.position.dist(particleB.position) * 2;\r\n    const collided = distance <= particleA.dimension.width;\r\n\r\n    if (collided) {\r\n      particleA.velocity = this.p5.createVector(\r\n        particleA.velocity.x * -Math.random() * 10 - particleB.velocity.x,\r\n        particleA.velocity.y * -Math.random() * 10 - particleB.velocity.y\r\n      );\r\n    }\r\n  }\r\n\r\n  update() {\r\n    this.particles.map((particle, i) => {\r\n      particle.update(this.p5.mouseX, this.p5.mouseY);\r\n      const otherParticles = [\r\n        ...this.particles.slice(0, i),\r\n        ...this.particles.slice(i + 1, this.particles.length),\r\n      ];\r\n      otherParticles.map((other) => this.checkColision(particle, other));\r\n\r\n      particle.draw();\r\n    });\r\n  }\r\n}\r\n\r\nexport default ParticleSystem;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AAGA;AAAA;AACA;AADA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AAIA;AAAA;AAAA;AAEA;AACA;AACA;;;;;;AAGA;;;;A","sourceRoot":""}