{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.f50d4251dee8108522cd.hot-update.js","sources":["webpack:///./src/components/sketchs/background/particle.ts"],"sourcesContent":["import p5 from \"p5\";\r\nimport { WindowOffset } from \"./particleSystem\";\r\nimport { checkPos } from \"./utils\";\r\n\r\ntype Dimension = {\r\n  width: number;\r\n  height: number;\r\n};\r\n\r\nclass Particle {\r\n  dimension: Dimension;\r\n  acceleration: p5.Vector;\r\n  velocity: p5.Vector;\r\n  p5: p5;\r\n  position: p5.Vector;\r\n  tail: Array<p5.Vector>;\r\n  color: string;\r\n  accLimit: number;\r\n  velLimit: number;\r\n  offset: WindowOffset;\r\n  collided: boolean;\r\n  collidedCount: number;\r\n\r\n  constructor(\r\n    dimension: Dimension,\r\n    p5: p5,\r\n    offset: WindowOffset,\r\n    color: string,\r\n    velocity?: p5.Vector\r\n  ) {\r\n    this.dimension = dimension;\r\n    this.p5 = p5;\r\n    this.acceleration = this.p5.createVector();\r\n\r\n    this.velocity = velocity ? velocity : this.p5.createVector();\r\n    this.position = this.p5.createVector(\r\n      Math.random() * window.innerWidth - window.innerWidth / 2,\r\n      Math.random() * window.innerHeight - window.innerHeight / 2\r\n    );\r\n    this.accLimit = Math.random() * 2;\r\n    this.velLimit = Math.random() + 3.5;\r\n    console.log(\"VELLL\", this.velLimit);\r\n    this.tail = [];\r\n    this.color = color;\r\n    this.offset = offset;\r\n    this.collided = false;\r\n    this.collidedCount = 0;\r\n  }\r\n\r\n  update(mouseX: number, mouseY: number) {\r\n    const { x, y } = this.position;\r\n\r\n    this.acceleration = this.p5.createVector(\r\n      checkPos(x, mouseX - this.offset.x, this.acceleration.x),\r\n      checkPos(y, mouseY - this.offset.y, this.acceleration.y)\r\n    );\r\n\r\n    this.acceleration.limit(this.accLimit);\r\n    this.acceleration.setMag(this.collided ? -2 : 0.2);\r\n    this.velocity.add(this.acceleration);\r\n    this.velocity.limit(this.collided ? 10 : this.velLimit)//3.5);\r\n    this.position.add(this.velocity);\r\n\r\n    if (this.tail.length > 4) this.tail = this.tail.slice(0, -1);\r\n    else this.tail = [this.position.copy(), ...this.tail];\r\n\r\n    this.collided && this.collidedCount++;\r\n\r\n    if (this.collidedCount >= 80) {\r\n      this.collided = false;\r\n      this.collidedCount = 0;\r\n    }\r\n  }\r\n\r\n  drawCollider(mouseX: number, mouseY: number, image: any) {\r\n    const millis = this.p5.millis();\r\n\r\n    this.p5.pointLight(255, 255, 255, 0, 0, 10000);\r\n\r\n    this.p5.texture(image);\r\n    this.p5.push();\r\n    this.p5.translate(mouseX - this.offset.x, mouseY - this.offset.y, 0);\r\n    this.p5.rotateY(millis / 1000);\r\n    this.p5.sphere(40, 24, 24);\r\n    this.p5.pop();\r\n  }\r\n\r\n  draw() {\r\n    const { width, height } = this.dimension;\r\n    this.p5.fill(this.color);\r\n    this.p5.ellipse(this.position.x, this.position.y, width, height);\r\n\r\n    for (let i = 0; i < this.tail.length; i++) {\r\n      this.p5.ellipse(this.tail[i].x, this.tail[i].y, width - i, height - i);\r\n    }\r\n  }\r\n}\r\n\r\nexport default Particle;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAEA;AACA;AAMA;AAcA;AAMA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AAAA;AACA;AACA;AAEA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AAAA;AAAA;AAAA;AAGA;AAKA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAGA;;;;A","sourceRoot":""}