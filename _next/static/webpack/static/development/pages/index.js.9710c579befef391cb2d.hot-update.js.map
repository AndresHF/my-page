{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.9710c579befef391cb2d.hot-update.js","sources":["webpack:///./src/components/sketchs/matrixRain/symbol.ts"],"sourcesContent":["import p5 from \"p5\";\r\n\r\nconst getRandomSymbol = () => {\r\n    return String.fromCharCode(0x30A0 + Math.round(Math.random() * 96));\r\n}\r\n\r\nconst getRandomNumber = (max: number, min: number = 10) => {\r\n    return Math.floor(Math.random() * max) + min;\r\n}\r\n\r\nconst Y_OFFSET = 21;\r\n\r\nclass Symbol {\r\n    \r\n    position: p5.Vector;\r\n    velocity: p5.Vector; \r\n    symbol: string;\r\n    tail: Array<Symbol>;\r\n    lastSymbol: string;\r\n    constructor(p5: p5, positionX: number, isHead: boolean = true) {\r\n        this.initSymbol(p5, positionX);\r\n        if(isHead) {\r\n            this.tail = new Array(getRandomNumber(p5.width / 80));\r\n            for(let i = 0; i < this.tail.length; i++) {\r\n                this.tail[i] = new Symbol(p5, positionX, false);\r\n            }\r\n            console.log(this.tail.length);\r\n        }\r\n    }\r\n\r\n    initSymbol(p5: p5, positionX: number) {\r\n        this.symbol = getRandomSymbol();\r\n        this.position = p5.createVector(positionX, -Math.random() * 500);\r\n        this.velocity = p5.createVector(0, Math.random() * 4 + 4);\r\n       \r\n    }\r\n    update(p5: p5, isHead: boolean = true) {\r\n        if(Math.random() > 0.95){\r\n            this.symbol = getRandomSymbol();\r\n            // this.tail.forEach((e, i) => setTimeout(() => {\r\n            //     e.symbol = getRandomSymbol();\r\n            // }, 75 * i))\r\n        } \r\n        if(isHead) {\r\n            this.position.add(this.velocity);\r\n            if(this.position.y > p5.height + this.tail.length * Y_OFFSET){\r\n                this.initSymbol(p5, this.position.x);\r\n            } \r\n        }\r\n    }\r\n    draw(p5: p5) {\r\n        p5.fill(100, 255, 100);\r\n        p5.text(this.symbol, this.position.x, this.position.y);\r\n        if(this.tail) {\r\n            for(let i = 0; i < this.tail.length; i++) {\r\n                this.tail[i].update(p5, false);\r\n                const calculatedY = this.position.y - (Y_OFFSET *  i) - 20\r\n                const alpha =  255 - (10 * i);\r\n                //const alphaOffset = this.tail[i].lastSymbol !== this.tail[i].symbol ? alpha + 100: alpha;\r\n                p5.fill(0, 255, 70, alpha);\r\n                this.tail[i].lastSymbol = this.tail[i].symbol;\r\n                p5.text(this.tail[i].symbol, this.position.x, calculatedY);\r\n                \r\n            } \r\n        }\r\n    }\r\n}\r\n\r\nexport default Symbol;\r\n\r\n"],"mappings":";;;;;;;;;;;;;;;;;;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AAAA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AAEA;;;AACA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;;AAGA;;;;A","sourceRoot":""}