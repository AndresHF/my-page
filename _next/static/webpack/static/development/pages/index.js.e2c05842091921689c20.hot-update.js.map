{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.e2c05842091921689c20.hot-update.js","sources":["webpack:///./src/components/sketchs/matrixRain/MatrixRainContainer.tsx","webpack:///./src/components/sketchs/matrixRain/symbol.ts"],"sourcesContent":["import loadable from \"@loadable/component\";\r\nimport Symbol from \"./symbol\";\r\n\r\nconst X_OFFSET = 30;\r\n\r\nconst MatrixRainContainer: React.FC = ({}) => {\r\n  let symbols = [] as Array<Symbol>;\r\n  const setup = (p5, canvasParentRef) => {\r\n    p5.createCanvas(window.innerWidth, window.innerHeight + 50).parent(\r\n      canvasParentRef\r\n    );\r\n    p5.strokeWeight(2);\r\n    p5.textSize(20);\r\n    //p5.frameRate(100);\r\n    const mobileOffset = window.innerWidth < 500 ? 0 : 20;\r\n    for (let i = 0; i < window.innerWidth / 31; i++) {\r\n      symbols[i] = new Symbol(\r\n        p5,\r\n        mobileOffset === 0,\r\n        mobileOffset + i * X_OFFSET\r\n      );\r\n    }\r\n  };\r\n\r\n  const draw = (p5) => {\r\n    p5.clear();\r\n    p5.background(0, 0, 0);\r\n    symbols.forEach((s) => {\r\n      s.update(p5);\r\n    });\r\n  };\r\n\r\n  if (typeof window == \"undefined\") return null;\r\n  const Sketch = loadable(() => import(\"react-p5\"));\r\n\r\n  return (\r\n    <div className=\"sketch__container\">\r\n      <Sketch setup={setup} draw={draw} />;\r\n    </div>\r\n  );\r\n};\r\nexport default MatrixRainContainer;\r\n","import p5 from \"p5\";\r\nimport { isBoolean } from \"util\";\r\n\r\nconst getRandomSymbol = () => {\r\n  return String.fromCharCode(0x30a0 + Math.round(Math.random() * 90));\r\n};\r\n\r\nconst getRandomNumber = (max: number, min: number = 10) => {\r\n  return Math.floor(Math.random() * max) + min;\r\n};\r\n\r\nconst Y_OFFSET = 21;\r\n\r\nclass Symbol {\r\n  position: p5.Vector;\r\n  symbol: string;\r\n  tail: Array<Symbol>;\r\n  shouldGlow: boolean;\r\n  shadeOffset: number;\r\n  rainSpeed: number;\r\n  changeOffset: number;\r\n\r\n  constructor(\r\n    p5: p5,\r\n    isMobile: boolean,\r\n    positionX: number,\r\n    isHead: boolean = true\r\n  ) {\r\n    this.symbol = getRandomSymbol();\r\n    this.initSymbol(p5, positionX, isMobile);\r\n    this.shadeOffset = 0;\r\n    if (isHead) {\r\n      this.tail = new Array(Math.floor(p5.height / 22));\r\n      this.shadeOffset = getRandomNumber(255, 120);\r\n      for (let i = 0; i < this.tail.length; i++) {\r\n        this.tail[i] = new Symbol(p5, isMobile, positionX, false);\r\n        this.tail[i].changeOffset = Math.random() * 10;\r\n      }\r\n    }\r\n  }\r\n\r\n  initSymbol(p5: p5, positionX: number, isMobile: boolean) {\r\n    this.position = p5.createVector(positionX, p5.height - Y_OFFSET - 20);\r\n    this.shadeOffset = getRandomNumber(255, 100);\r\n    this.rainSpeed = isMobile\r\n      ? getRandomNumber(80, 50)\r\n      : getRandomNumber(50, 20);\r\n  }\r\n  update(p5: p5) {\r\n    const changeSymbol = Math.random() > 0.99;\r\n\r\n    for (let i = this.tail.length - 1; i >= 0; i--) {\r\n      const calculatedY = this.position.y - Y_OFFSET * i - 20;\r\n      if (p5.frameCount % 2 == 0)\r\n        this.tail[i].shadeOffset -= getRandomNumber(10, 4);\r\n      if (changeSymbol) {\r\n        setTimeout(() => {\r\n          this.tail[i].shouldGlow = true;\r\n          this.tail[i].symbol = getRandomSymbol();\r\n          this.tail[i].shadeOffset = getRandomNumber(350, 100);\r\n          this.tail[i].changeOffset = Math.random() * 8;\r\n        }, 6000 - i * this.rainSpeed);\r\n      }\r\n      if (this.tail[i].shouldGlow) {\r\n        p5.strokeWeight(2);\r\n        p5.stroke(255, 100);\r\n        p5.fill(255, 100);\r\n        this.tail[i].shouldGlow = false;\r\n      } else {\r\n        p5.strokeWeight(0.2);\r\n        p5.stroke(80, 255, 80, this.tail[i].shadeOffset);\r\n        p5.fill(80, 255, 80, this.tail[i].shadeOffset);\r\n      }\r\n      if (Math.random() > this.tail[i].changeOffset) {\r\n        this.tail[i].symbol = getRandomSymbol();\r\n      }\r\n      p5.text(this.tail[i].symbol, this.position.x, calculatedY);\r\n    }\r\n  }\r\n}\r\n\r\nexport default Symbol;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;;;;;;;;;;;;;;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AASA;AAKA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AAGA;;;AACA;AAAA;AACA;AAAA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AA5BA;AACA;AAEA;AAAA;AA0BA;AACA;;;;;;AAGA;;;;A","sourceRoot":""}