{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.e364598a5ef873b8589d.hot-update.js","sources":["webpack:///./node_modules/@babel/runtime/helpers/esm/extends.js","webpack:///./src/components/UI/Layout.tsx","webpack:///./src/components/UI/hooks/useParticles.tsx"],"sourcesContent":["export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","import Head from \"next/head\";\r\nimport Footer from \"./Footer\";\r\nimport Header from \"./Header\";\r\nimport { ReactNodeLike } from \"prop-types\";\r\nimport { ParticlesProvider } from \"./hooks/useParticles\";\r\n\r\ntype LayoutProps = {\r\n  title: string;\r\n  background?: ReactNodeLike;\r\n};\r\n\r\nconst Layout: React.FC<LayoutProps> = ({ title, background, children }) => {\r\n  return (\r\n    <>\r\n      <Head>\r\n        <title>{title}</title>\r\n        <link rel=\"icon\" href=\"/icons/codeNinja.ico\" />\r\n      </Head>\r\n      <Header route=\"home\" />\r\n      <main>\r\n        {background}\r\n        <div className=\"container\">{children}</div>\r\n      </main>\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\nexport default (props: LayoutProps) => (\r\n  <ParticlesProvider>\r\n    <Layout {...props} />\r\n  </ParticlesProvider>\r\n);\r\n","import React, { useContext, useReducer } from \"react\";\r\n\r\ntype StateType = {\r\n  particlesAmount: number;\r\n  target: HTMLElement | undefined;\r\n};\r\n\r\ntype ActionType = {\r\n  type: \"SET_PARTICLES_AMOUNT\" | \"SET_TARGET\";\r\n  value: number | HTMLElement | undefined;\r\n};\r\n\r\nexport const INITIAL_ACTIVE_KEY = \"buildingList\";\r\n\r\ntype ReducerType = (state: StateType, action: ActionType) => StateType;\r\n\r\nconst particlesInitialState: StateType = {\r\n  particlesAmount: 6,\r\n  target: undefined,\r\n};\r\n\r\nexport const particlesReducer: ReducerType = (state, action) => {\r\n  switch (action.type) {\r\n    case \"SET_PARTICLES_AMOUNT\":\r\n      return { ...state, particlesAmount: action.value as number };\r\n    case \"SET_TARGET\":\r\n      return { ...state, target: action.value as HTMLElement | undefined };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst ParticlesContext = React.createContext({\r\n  state: particlesInitialState,\r\n  dispatch: (action: ActionType) => {},\r\n});\r\n\r\nexport const ParticlesProvider: React.FC = ({ children }) => {\r\n  const [state, dispatch] = useReducer(particlesReducer, particlesInitialState);\r\n  return (\r\n    <ParticlesContext.Provider value={{ state, dispatch }}>\r\n      {children}\r\n    </ParticlesContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useParticles = () => {\r\n  const { state, dispatch } = useContext(ParticlesContext);\r\n  return { ...state, dispatch };\r\n};\r\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChBA;AACA;AACA;AAEA;AACA;AAMA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3BA;AAYA;AAIA;AACA;AACA;AAFA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AANA;AAQA;AAEA;AACA;AACA;AAFA;AAKA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;;;;A","sourceRoot":""}