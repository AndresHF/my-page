{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.b560ea6513938953823f.hot-update.js","sources":["webpack:///./src/components/sketchs/background/particle.ts"],"sourcesContent":["import p5 from \"p5\";\r\nimport { WindowOffset } from \"./particleSystem\";\r\n\r\ntype Dimension = {\r\n  width: number;\r\n  height: number;\r\n};\r\n\r\nconst ACC_RATE = 0.1;\r\n\r\nconst checkPos = (pos: number, mouse: number, acceleration: number): number => {\r\n  if (pos <= mouse) return acceleration + ACC_RATE;\r\n  if (pos >= mouse) return acceleration - ACC_RATE;\r\n  return 0;\r\n};\r\n\r\nexport const getParticles = (\r\n  particlesAmount: number,\r\n  radius: number,\r\n  p5: p5,\r\n  offset: WindowOffset\r\n) => {\r\n  let particles = new Array(particlesAmount);\r\n  for (let i = 0; i < particlesAmount; i++) {\r\n    particles[i] = new Particle({ width: radius, height: radius }, p5, offset);\r\n  }\r\n  return particles;\r\n};\r\n\r\nlet colors = [\"red\", \"green\", \"blue\", \"purple\", \"orange\"];\r\n\r\nclass Particle {\r\n  dimension: Dimension;\r\n  acceleration: p5.Vector;\r\n  velocity: p5.Vector;\r\n  p5: p5;\r\n  position: p5.Vector;\r\n  tail: Array<p5.Vector>;\r\n  color: string;\r\n  accLimit: number;\r\n  offset: WindowOffset;\r\n\r\n  constructor(dimension: Dimension, p5: p5, offset: WindowOffset) {\r\n    this.dimension = dimension;\r\n    this.p5 = p5;\r\n    this.acceleration = this.p5.createVector();\r\n\r\n    this.velocity = this.p5.createVector();\r\n    this.position = this.p5.createVector(\r\n      Math.random() * window.innerWidth,\r\n      Math.random() * window.innerHeight\r\n    );\r\n    this.accLimit = Math.random() / 10;\r\n    this.tail = [];\r\n    this.color = colors[Math.floor(Math.random() * colors.length)] || \"black\";\r\n    this.offset = offset;\r\n  }\r\n\r\n  update(mouseX: number, mouseY: number) {\r\n    const { x, y } = this.position;\r\n    this.acceleration = this.p5.createVector(\r\n      checkPos(x, mouseX - this.offset.x, this.acceleration.x), // - window.innerWidth / 2\r\n      checkPos(y, mouseY - this.offset.y, this.acceleration.y) //  - window.innerHeight / 2\r\n    );\r\n    this.acceleration.limit(this.accLimit); //(0.1);\r\n    this.acceleration.setMag(0.08); //0.1\r\n    this.velocity.add(this.acceleration);\r\n    this.velocity.limit(3);\r\n    this.acceleration.setMag(0.2);\r\n    this.position.add(this.velocity);\r\n    if (this.tail.length > 5) this.tail = this.tail.slice(0, -1);\r\n    else this.tail = [this.position.copy(), ...this.tail];\r\n  }\r\n\r\n  drawCollider(mouseX: number, mouseY: number, image: any) {\r\n    //this.p5.fill(\"red\");\r\n    const millis = this.p5.millis();\r\n\r\n    this.p5.fill(\"white\");\r\n    this.p5.pointLight(255, 255, 255, 0, 0, 10000);\r\n    //this.p5.rotateX(millis / 1000);\r\n\r\n    //this.p5.rotateZ(millis / 1000);\r\n    this.p5.fill(0, 0, 0, 180);\r\n    this.p5.texture(image);\r\n    this.p5.stroke(0, 0, 0);\r\n    this.p5.push();\r\n    this.p5.translate(mouseX - this.offset.x, mouseY - this.offset.y, 0);\r\n    this.p5.rotateY(millis / 1000);\r\n    this.p5.sphere(40, 100, 100); //\r\n    this.p5.pop();\r\n    //this.p5.ellipsoid(75);\r\n  }\r\n\r\n  draw() {\r\n    const { width, height } = this.dimension;\r\n    this.p5.fill(this.color);\r\n    this.p5.ellipse(this.position.x, this.position.y, width, height);\r\n    for (let i = 0; i < this.tail.length; i++) {\r\n      this.p5.ellipse(this.tail[i].x, this.tail[i].y, width - i, height - i);\r\n    }\r\n  }\r\n}\r\n\r\nexport default Particle;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AAWA;AAAA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AAAA;AACA;AACA;AAEA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;;;AACA;AAAA;AAAA;AAAA;AAEA;AAEA;AAFA;AAIA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;;;AAEA;AACA;AACA;AAEA;AACA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;;;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;;;;;;AAGA;;;;A","sourceRoot":""}