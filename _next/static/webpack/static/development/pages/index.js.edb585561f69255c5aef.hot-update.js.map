{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.edb585561f69255c5aef.hot-update.js","sources":["webpack:///./src/components/sketchs/matrixRain/symbol.ts"],"sourcesContent":["import p5 from \"p5\";\r\n\r\nconst getRandomSymbol = () => {\r\n  return String.fromCharCode(0x30a0 + Math.round(Math.random() * 90));\r\n};\r\n\r\nconst getRandomNumber = (max: number, min: number = 10) => {\r\n  return Math.floor(Math.random() * max) + min;\r\n};\r\n\r\nconst glowSymbols = (\r\n  glowChunk: number,\r\n  tail: Array<Symbol>,\r\n  index: number,\r\n  p5: p5\r\n) => {\r\n  if (index - glowChunk > 0) {\r\n    for (let i = 0; i < glowChunk; i++) {\r\n      tail[index - i].shouldGlow = true;\r\n      //tail[index - i].symbol = getRandomSymbol();\r\n      tail[index - i].shadeOffset = getRandomNumber(255, 0);\r\n    }\r\n  }\r\n};\r\n\r\nconst Y_OFFSET = 21;\r\n\r\nclass Symbol {\r\n  position: p5.Vector;\r\n  velocity: p5.Vector;\r\n  symbol: string;\r\n  tail: Array<Symbol>;\r\n  shouldGlow: boolean;\r\n  shadeOffset: number;\r\n  constructor(p5: p5, positionX: number, isHead: boolean = true) {\r\n    this.symbol = getRandomSymbol();\r\n    this.initSymbol(p5, positionX);\r\n    if (isHead) {\r\n      this.velocity = p5.createVector(0, Math.random() * 2 + 1);\r\n      //this.tail = new Array(getRandomNumber(p5.width / 100) + 10);\r\n      this.tail = new Array(getRandomNumber(p5.height / 10) + 10);\r\n      this.shadeOffset = getRandomNumber(255, 80);\r\n      for (let i = 0; i < this.tail.length; i++) {\r\n        this.tail[i] = new Symbol(p5, positionX, false);\r\n      }\r\n    }\r\n  }\r\n\r\n  initSymbol(p5: p5, positionX: number) {\r\n    this.position = p5.createVector(positionX, p5.height - Y_OFFSET); //-Math.random() * 500);\r\n    this.shadeOffset = 255;\r\n  }\r\n  update(p5: p5) {\r\n    //this.position.add(this.velocity);\r\n    const changeSymbol = Math.random() > 0.998; //Math.random() > 0.95;\r\n\r\n    if (changeSymbol) {\r\n      this.symbol = getRandomSymbol();\r\n    }\r\n    // if (\r\n    //   this.shadeOffset < 0 ||\r\n    //   this.position.y > p5.height + this.tail.length * Y_OFFSET\r\n    // ) {\r\n    //   this.initSymbol(p5, this.position.x);\r\n    // }\r\n    //for (let i = 0; i < this.tail.length; i++) {\r\n    for (let i = this.tail.length - 1; i >= 0; i--) {\r\n      const calculatedY = this.position.y - Y_OFFSET * i - 20;\r\n      //const alpha = 255 - 4 * i;\r\n      if (changeSymbol) {\r\n        setTimeout(() => {\r\n          glowSymbols(getRandomNumber(3, 1), this.tail, i, p5);\r\n          // this.tail[i].shouldGlow = true;\r\n          this.tail[i].symbol = getRandomSymbol();\r\n          //   this.tail[i].shadeOffset = getRandomNumber(255, 80);\r\n        }, this.tail.length * 100 - i * 80);\r\n      }\r\n      if (i < 1 || this.tail[i].shouldGlow) {\r\n        p5.fill(180, 255, 180);\r\n        this.tail[i].shouldGlow = false;\r\n      } else {\r\n        p5.fill(80, 255, 80, this.tail[i].shadeOffset);\r\n      }\r\n      p5.text(this.tail[i].symbol, this.position.x, calculatedY);\r\n    }\r\n  }\r\n  draw(p5: p5) {\r\n    p5.fill(180, 255, 180);\r\n    p5.text(this.symbol, this.position.x, this.position.y);\r\n  }\r\n}\r\n\r\nexport default Symbol;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AAAA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AAAA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AA/BA;AACA;AAaA;AAAA;AAkBA;AACA;;;AACA;AACA;AACA;AACA;;;;;;AAGA;;;;A","sourceRoot":""}